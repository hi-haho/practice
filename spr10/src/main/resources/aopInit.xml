<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 핵심 객체 생성 : target -->
	<bean id="logicImpl" class="pack.LogicImpl">
		<constructor-arg>
			<ref bean="articleDao"/>
		</constructor-arg>
	</bean>
	<bean id="articleDao" class="pack.ArticleDao"></bean>
	
	<!-- AOP 설정 : Advice - 상단에서 namespace 사용 (aop) -->
	<bean id="ourAdvice" class="pack.OurAdvice"/>
	
	<aop:config>
		<aop:aspect ref="ourAdvice"> <!-- 공통 관점 사항: 즉, target에 들어갈 로직 -->
			<!-- pointcut 표현식은 execution(패키지.클래스.메소드(매개변수(파라미터)) -->
			<aop:pointcut expression="execution(* *..*LogicInter*.*(..)) or execution(public void selectAll() )" id="poi"/> <!-- 조인포인트를 하나로 결합한(묶은) 것 -->
			<aop:around method="haha" pointcut-ref="poi"/> <!-- 해당 로직을 지정해준다. -->
		</aop:aspect>
	</aop:config>
</beans>