<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 스프링 정권을 aop에 넘겼다! -->

	<!-- target -->
	<bean id="targetBean" class="pack.MessageImpl">
		<property name="name" value="영은언니"></property>
	</bean>
	
	<!-- advice(Aspect) : target으로 weaving -->
	<bean id="myadvice" class="aspect.Myadvice"/>
	
	<!--
	proxy를 간접 접근 : 메서드 호출 또는 공통 기능 등을 수행
	어플리케이션과 AOP 설정을 직접 연계하지 않더라도 유연한 프로그래밍이 가능
	 -->
	 <bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
	 	<property name="target">
	 		<ref bean="targetBean" />
	 	</property>
	 	<property name="interceptorNames">
	 		<list>
	 			<value>hiAdvisor</value><!-- 작성한 advisor를 줌(핵심흐름으로 넣어준다.)-->
	 		</list>
	 	</property>
	 </bean>
	 <!-- adviser(advice + pointcut) -->
	 <bean id="hiAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
	 	<property name="advice">
	 		<ref bean="myadvice"/>
	 	</property>
	 	<property name="pointcut">
	 		<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
	 			<property name="pattern">
	 				<value>.*sayHi*.</value> <!-- 메서드 안에 sayHi가 포함되어 있으면 pointcut 대상으로 -->
	 			</property>
	 		</bean>
	 	</property>
	 </bean>
</beans>